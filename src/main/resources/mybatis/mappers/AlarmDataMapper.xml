<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meterbox.attendance.backstage.dao.AlarmDataMapper">
  <resultMap id="BaseResultMap" type="com.meterbox.attendance.backstage.entity.AlarmData">
    <id column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="d_id" jdbcType="VARCHAR" property="dId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="temperature" jdbcType="REAL" property="temperature" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
  </resultMap>
  <sql id="Base_Column_List">
    data_id, d_id, user_id, temperature, state, time, created_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ai_alarm_data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ai_alarm_data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.meterbox.attendance.backstage.entity.AlarmData">
    insert into ai_alarm_data (data_id, d_id, user_id, 
      temperature, state, time, 
      created_time)
    values (#{dataId,jdbcType=VARCHAR}, #{dId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=REAL}, #{state,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.meterbox.attendance.backstage.entity.AlarmData">
    insert into ai_alarm_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        data_id,
      </if>
      <if test="dId != null">
        d_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=REAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meterbox.attendance.backstage.entity.AlarmData">
    update ai_alarm_data
    <set>
      <if test="dId != null">
        d_id = #{dId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=REAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meterbox.attendance.backstage.entity.AlarmData">
    update ai_alarm_data
    set d_id = #{dId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=REAL},
      state = #{state,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
</mapper>